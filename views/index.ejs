<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Luma Weather</title>
</head>
<body>
    <header>
        <h1>Weather App</h1>
      </header>
      <main>
        <form id="search-form">
          <input type="text" id="city-input" placeholder="Enter city" required>
          <button type="submit">Search</button>
        </form>
        <div id="weather-container"></div>
      </main>
    <script>
       document.addEventListener("DOMContentLoaded", () => {
        const weatherContainer = document.getElementById("weather-container");
        const searchForm = document.getElementById('search-form');


        // Function to fetch weather data from the server
        const fetchWeather = async (queryParams) => {
          try{
            const response = await fetch(`/weather?${queryParams}`); // Request weather data
            const data = await response.json(); // Parse JSON response

            if(data.success) {
              // Display fetched weather information
              weatherContainer.innerHTML = `
              <h3>Weather in ${data.weather.city}</h3> 
              <p>Temperature: ${data.weather.temperature}Â°C</p>
              <p>Precipitation: ${data.weather.precipitation}</p>
              `;
            } else {
              weatherContainer.innerHTML = `<p>Error: ${data.message}</p>`;
            }
          } catch (error) {
            //Handle and display fetch errors
            weatherContainer.innerHTML = `<p>Error fetching weather data.</p>`;
            console.error(error);
          }
        };

        // Try getting the user's LOcation on Load
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(
            (position) => {
              // Use user's coordinates to fetch weather
              const { latitude, longitude } = position.coords;
              fetchWeather(`lat=${latitude}&lon=${longitude}`);
            },
            (error) => {
              //if location access denied, prompt for mannual input
              weatherContainer.innerHTML = `<p>Please enable location or enter city manually.</p>`;
            }
          );
       } else {
        // If Geolocation isn't supported
        weather.container.innerHTML = `<p>Geolocation is not supported by your browser</p>`;
       } 

            // Handle manual city search
            searchForm.addEventListener("submit", (event) => {
              event.preventDefault();
              const city = document.getElementById("city-input").value; // Get user input
              fetchWeather(`city=${city}`); // Fetch weather for the entered city
            });
          }); 
    </script>
</body>
</html>